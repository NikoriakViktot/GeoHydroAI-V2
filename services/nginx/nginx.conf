# /etc/nginx/nginx.conf

events {

}

http {
  # --- базове
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Connection "";

  resolver 127.0.0.11 valid=30s ipv6=off;
   upstream terracotta_upstream {
  zone terracotta 64k;      # ← обов’язково для resolve
  server terracotta:5000 resolve;
  keepalive 64;
}
  upstream fastapi_upstream {
    server api:8000;
    keepalive 64;
      }
  upstream dash_upstream {
  server dash:8050;
  }


  server {
    listen 80;
    server_name geohydroai.org www.geohydroai.org;

    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    return 301 https://$host$request_uri;
  }

  # --- CORS для Terracotta
  map $http_origin $cors_allow_origin {
    default "";
    "https://geohydroai.org"      $http_origin;
    "https://www.geohydroai.org"  $http_origin;
  }

  # --- HTTPS
  server {
    listen 443 ssl;
    http2 on;
    server_name geohydroai.org www.geohydroai.org;

    ssl_certificate     /etc/letsencrypt/live/www.geohydroai.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.geohydroai.org/privkey.pem;

    client_max_body_size 2048M;
    proxy_read_timeout   3600s;
    proxy_send_timeout   3600s;
    proxy_buffering      off;
    proxy_request_buffering off;
    add_header X-Accel-Buffering no always;
    merge_slashes on;
    # --- health

#     server_tokens off;
#
# # 444 для явного сміття/невідомих php-скриптів
#     location ~* \.(php|asp|aspx|jsp)$ {
#         return 444;
#     }
#
#     # Блок популярних сміттєвих шляхів
#     location ~* ^/(admin|wp-admin|wp-login|xmlrpc\.php|vendor|env|console) {
#         return 444;
#     }
#
#     # Ліміт частоти запитів (rate limit)
#     limit_req_zone $binary_remote_addr zone=rl:10m rate=10r/s;
#

    # ...
    location ^~ /dem/{
      proxy_pass         http://dash_upstream;
      proxy_http_version 1.1;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection "";
      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;
      proxy_buffering off;
      proxy_request_buffering off;
      add_header X-Accel-Buffering no always;
    }
    location = /dem { return 302 /dem/; }

    location ~* \.map$ {
    return 204;
}
    # головні ендпоїнти Dash
    location /_dash-layout { proxy_pass http://dash_upstream; }
    location /_dash-dependencies { proxy_pass http://dash_upstream; }
    location /_dash-update-component {
        proxy_pass http://dash_upstream;
        proxy_read_timeout 300s;           # довгі колбеки
    }
    # СТАТИКА компонентних бібліотек (ВАЖЛИВО!)
    location /_dash-component-suites/ {
        proxy_pass http://dash_upstream;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering on;
        expires 30d;
            }

     # ваші /assets (якщо потрібне пряме віддавання)
    location /assets/ {
        alias /app/assets/;                # шлях всередині контейнера/сервера
        try_files $uri @dash;
    }
    location @dash {
        proxy_pass http://dash_upstream;
    }
    location = /favicon.ico {
    root /var/www/geoai-front/current;
    try_files /favicon.ico /public/favicon.ico =404;
    access_log off;
    expires 30d;
}

    # --- FastAPI

    location ^~ /api/ {
        proxy_pass http://fastapi_upstream;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_request_buffering off;
        add_header X-Accel-Buffering no always;
        chunked_transfer_encoding on;
        gzip off;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
#     location = /healthz      { proxy_pass http://fastapi_upstream/healthz; }

#     location = /docs         { return 302 /api/docs; }
#     location = /openapi.json { return 302 /api/openapi.json; }

    # === ГОЛОВНА SPA з кореня ===
    location / {
        root /var/www/geoai-front/current;     # ← root, НЕ alias
        try_files $uri $uri/ /index.html;
    }

    # Головний index.html без довгого кешу
    location = /index.html {
        root /var/www/geoai-front/current;     # ← root, НЕ alias
        add_header Cache-Control "no-cache";
    }

    # Статика з кореня SPA
    location /assets/ {
        root /var/www/geoai-front/current;     # віддасть /var/www/geoai-front/current/assets/...
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
        access_log off;
            }

    location /flood_scenarios/ {
             alias /var/www/geoai-front/current/;
              try_files $uri $uri/ /flood_scenarios/index.html;
    }

    # Блок №2: Обробка статичних файлів (ассетів).
    # Nginx обере цей блок для запитів до /flood_scenarios/assets/*, бо він є більш точним.
    # Він правильно знаходить файли і встановлює довгий час кешування.
    location /flood_scenarios/assets/ {
        alias /var/www/geoai-front/current/assets/;
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
        access_log off;
    }

    # Блок №3: Окреме правило для самого index.html.
    # Забороняє браузеру надовго кешувати головний файл, щоб оновлення підхоплювались одразу.
    location = /flood_scenarios/index.html {
        alias /var/www/geoai-front/current/index.html;
        add_header Cache-Control "no-cache";
    }
    location = /flood-dem-diif     { return 302 /flood_scenarios/; }
    location = /flood-dem-diif/    { return 302 /flood_scenarios/; }
    # -----------------------------------------------
    # --- Terracotta тайли з CORS
    # /tc — через upstream
    location ^~ /tc/ {
      proxy_pass http://terracotta_upstream/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # CORS/headers як у тебе
      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin  $cors_allow_origin always;
        add_header Access-Control-Allow-Methods "GET,HEAD,OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin,Content-Type,Accept,Range" always;
        add_header Access-Control-Max-Age       86400 always;
        add_header Vary "Origin" always;
        return 204;
      }
      add_header Access-Control-Allow-Origin  $cors_allow_origin always;
      add_header Access-Control-Allow-Methods "GET,HEAD,OPTIONS" always;
      add_header Access-Control-Allow-Headers "Origin,Content-Type,Accept,Range" always;
      add_header Vary "Origin" always;
    }

    # якщо треба статика Terracotta:
    location ^~ /tc/static/ {
      proxy_pass http://terracotta_upstream/static/;
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      expires 30d;
    }
    location /reports/ {
    alias /var/www/geoai-reports/;
    try_files $uri $uri/ =404;
}
       location = /cross_section_dashboard {
        return 302 /reports/cross_section_dashboard.html;
    }

  }
}
