# /etc/nginx/nginx.conf

events {}

http {
  # --- базове
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Connection "";

  resolver 127.0.0.11 valid=30s ipv6=off;

  # --- HTTP→HTTPS + ACME
  server {
    listen 80;
    server_name geohydroai.org www.geohydroai.org;

    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    return 301 https://$host$request_uri;
  }

  # --- CORS для Terracotta
  map $http_origin $cors_allow_origin {
    default "";
    "https://geohydroai.org"      $http_origin;
    "https://www.geohydroai.org"  $http_origin;
  }

  # --- HTTPS
  server {
    listen 443 ssl;
    http2 on;
    server_name geohydroai.org www.geohydroai.org;

    ssl_certificate     /etc/letsencrypt/live/www.geohydroai.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.geohydroai.org/privkey.pem;

    client_max_body_size 2048M;
#     proxy_read_timeout   3600s;
#     proxy_send_timeout   3600s;
#     proxy_buffering      off;
#     proxy_request_buffering off;
#     add_header X-Accel-Buffering no always;
#     merge_slashes on;
    # --- health

    # --- головна (Dash)
    location / {
      proxy_pass http://dash:8050/;
    }

    # --- FastAPI
   # ------------------------------------------------------------------
    # --- FastAPI (ОДИН, ПОВНИЙ БЛОК)
    location ^~ /api/ {
      proxy_pass http://api:8000;   # БЕЗ кінцевого /, щоб зберегти /api/

      # Налаштування буферизації та тайм-аутів для довгих операцій
      proxy_buffering off;
      proxy_request_buffering off;
      add_header X-Accel-Buffering no always;

      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;

      # Налаштування для стиснення та передачі даних
      chunked_transfer_encoding on;
      gzip off; # Вимикаємо Nginx Gzip, бо FastAPI робить це сам

      # Заголовки, які вже є в блоці http, можна не повторювати,
      # але для надійності Keep-Alive:
      proxy_set_header Connection "";
    }
    # ------------------------------------------------------------------


    # ⚠️ Тільки openapi.json залишаємо окремо для Content-Type
    location = /api/openapi.json {
        proxy_pass http://api:8000/openapi.json;
        add_header Content-Type application/json;
    }

    location = /healthz { proxy_pass http://api:8000/healthz; } # Можна залишити для чистоти


    # Add the openapi.json rule as well, as it's needed for docs
    location = /api/openapi.json {
        proxy_pass http://api:8000/openapi.json;
        add_header Content-Type application/json; # <--- ОСЬ ТУТ
    }


      # --- СЕКЦІЯ ДЛЯ ФРОНТЕНДУ (ПРАВИЛЬНА СТРУКТУРА) ---

    # Блок №1: Обробка SPA-роутингу.
    # Спрацьовує для шляхів типу /flood_scenarios/some/route
    # і віддає index.html, щоб React Router міг працювати.
    location /flood_scenarios/ {
             alias /var/www/geoai-front/current/;
              try_files $uri $uri/ /flood_scenarios/index.html;
    }

    # Блок №2: Обробка статичних файлів (ассетів).
    # Nginx обере цей блок для запитів до /flood_scenarios/assets/*, бо він є більш точним.
    # Він правильно знаходить файли і встановлює довгий час кешування.
    location /flood_scenarios/assets/ {
        alias /var/www/geoai-front/current/assets/;
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
        access_log off;
    }

    # Блок №3: Окреме правило для самого index.html.
    # Забороняє браузеру надовго кешувати головний файл, щоб оновлення підхоплювались одразу.
    location = /flood_scenarios/index.html {
        alias /var/www/geoai-front/current/index.html;
        add_header Cache-Control "no-cache";
    }
    location = /flood-dem-diif     { return 302 /flood_scenarios/; }
    location = /flood-dem-diif/    { return 302 /flood_scenarios/; }
    # -----------------------------------------------
    # --- Terracotta тайли з CORS
    location ^~ /tc/ {
      proxy_pass         http://terracotta:5000/;
      proxy_http_version 1.1;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;

      # Preflight
      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin  $cors_allow_origin always;
        add_header Access-Control-Allow-Methods "GET,HEAD,OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin,Content-Type,Accept,Range" always;
        add_header Access-Control-Max-Age       86400 always;
        add_header Vary "Origin" always;
        return 204;
      }

      # GET/HEAD
      add_header Access-Control-Allow-Origin  $cors_allow_origin always;
      add_header Access-Control-Allow-Methods "GET,HEAD,OPTIONS" always;
      add_header Access-Control-Allow-Headers "Origin,Content-Type,Accept,Range" always;
      add_header Vary "Origin" always;
    }
  }
}
